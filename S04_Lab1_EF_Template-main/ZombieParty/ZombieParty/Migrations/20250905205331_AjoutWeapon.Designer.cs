// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZombieParty.Models.Data;

#nullable disable

namespace ZombieParty.Migrations
{
    [DbContext(typeof(ZombiePartyDbContext))]
    [Migration("20250905205331_AjoutWeapon")]
    partial class AjoutWeapon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HuntingLogZombie", b =>
                {
                    b.Property<int>("huntingLogsId")
                        .HasColumnType("int");

                    b.Property<int>("zombiesZombieTypeId")
                        .HasColumnType("int");

                    b.HasKey("huntingLogsId", "zombiesZombieTypeId");

                    b.HasIndex("zombiesZombieTypeId");

                    b.ToTable("HuntingLogZombie");
                });

            modelBuilder.Entity("ZombieParty.Models.HuntingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("HuntingLogs");
                });

            modelBuilder.Entity("ZombieParty.Models.Weapon", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<decimal>("Force")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("QtyBought")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("ZombieParty.Models.Zombie", b =>
                {
                    b.Property<int>("ZombieTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("ShortDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ZombieTypeId");

                    b.ToTable("Zombies");
                });

            modelBuilder.Entity("ZombieParty.Models.ZombieType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZombieTypes");
                });

            modelBuilder.Entity("HuntingLogZombie", b =>
                {
                    b.HasOne("ZombieParty.Models.HuntingLog", null)
                        .WithMany()
                        .HasForeignKey("huntingLogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZombieParty.Models.Zombie", null)
                        .WithMany()
                        .HasForeignKey("zombiesZombieTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZombieParty.Models.Zombie", b =>
                {
                    b.HasOne("ZombieParty.Models.ZombieType", "ZombieType")
                        .WithMany()
                        .HasForeignKey("ZombieTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZombieType");
                });
#pragma warning restore 612, 618
        }
    }
}
